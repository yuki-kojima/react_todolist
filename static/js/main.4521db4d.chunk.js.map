{"version":3,"sources":["App.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inputText","taskList","filterType","event","setState","target","value","concat","input","document","getElementById","push","key","Date","now","completed","label","checked","i","length","_this2","nodes","_loop","item","flag","react_default","a","createElement","type","onChange","e","handleListChange","className","id","handleTextChange","placeholder","onClick","handleAddClick","handleFilterChange","Component","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.4521db4d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    // ステート\n    this.state = {\n      inputText: 'テスト',\n      taskList: [],\n      filterType: \"all\"\n    };\n  }\n  handleTextChange(event) {\n    this.setState({\n      inputText: event.target.value\n    });\n  }\n  handleAddClick() {\n    const taskList = this.state.taskList.concat();\n    const input = document.getElementById('js-inputTask');\n    taskList.push({\n      key: Date.now(), // ユニークなキーということで今回は時間\n      completed: false, // 完了しているか\n      label: this.state.inputText // タスクの文字列 \n    });\n    this.setState({\n      taskList: taskList\n    });\n    input.value = null;\n  }\n  handleListChange(event, key) {\n    const checked = event.target.checked;\n    const taskList = this.state.taskList.concat();\n\n    for (var i = 0; i < taskList.length; i++) {\n      if (taskList[i].key === key) {\n        taskList[i].completed = checked;\n      }\n    }\n    this.setState({\n      taskList: taskList\n    })\n  }\n  handleFilterChange(filterType) {\n    this.setState({\n      filterType: filterType\n    })\n  }\n  render() {\n    const nodes = [];\n    for (var i = 0; i < this.state.taskList.length; i++) {\n      const item = this.state.taskList[i];\n\n      let flag = true;\n      if (this.state.filterType === \"all\") {\n      } else if (this.state.filterType === \"active\") {\n        if (item.completed === true) {\n          flag = false;\n        }\n      } else if (this.state.filterType === \"completed\") {\n        if (item.completed === false) {\n          flag = false;\n        }\n      }\n\n      if (flag === true) {\n        nodes.push(<li key={item.key}>\n          <label><input type=\"checkbox\" checked={item.completed} onChange={(e) => this.handleListChange(e, item.key)} />{item.label}</label>\n        </li>);\n      }\n    }\n\n    return <div className=\"App\">\n        <h1>TODO LIST</h1>\n        <div>\n          <input type=\"text\" id=\"js-inputTask\" onChange={e => this.handleTextChange(e)} placeholder=\"タスクを入力してね\" />\n          <button onClick={e => this.handleAddClick(e)}>追加</button>\n        </div>\n        <p>{this.state.inputText}</p>\n        {/* this.stateはコンストラクタで作ったもの */}\n      <ul className=\"App-todolist\">{nodes}</ul>\n        <div>\n          <label>\n            <input type=\"radio\" value=\"all\" onChange={e => this.handleFilterChange(e.target.value)} checked={this.state.filterType === \"all\"} />\n            全て\n          </label>\n          <label>\n            <input type=\"radio\" value=\"active\" onChange={e => this.handleFilterChange(e.target.value)} checked={this.state.filterType === \"active\"} />\n            未完了のみ\n          </label>\n          <label>\n          <input type=\"radio\" value=\"completed\" onChange={e => this.handleFilterChange(e.target.value)} checked={this.state.filterType === \"completed\"} />\n            完了のみ\n          </label>\n        </div>\n      </div>;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}